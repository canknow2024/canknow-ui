@include b(tree) {
  position: relative;
  cursor: default;
  color: $text-color-regular;

  @include e(empty-block) {
    position: relative;
    min-height: 60px;
    text-align: center;
    width: 100%;
    height: 100%;
  }

  @include e(empty-text) {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    color: $text-color-secondary;
    font-size: $font-size;
  }

  @include e(drop-indicator) {
    position: absolute;
    left: 0;
    right: 0;
    height: 1px;
    background-color: $color-primary;
  }

  &.c-tree-highlight-current .c-tree-node.current > .c-tree-node-content {
    background-color: var(--c-fill-color-light);
  }
}

@include b(tree-node) {
  white-space: nowrap;
  outline: none;

  &:focus {
    > .c-tree-node-content {
      background-color: $background-color-component-hover;
    }
  }

  @include when(drop-inner) {
    > .c-tree-node-content .c-tree-node-label {
      background-color: $color-primary;
      color: #fff;
    }
  }

  @include e(content) {
    display: flex;
    align-items: center;
    cursor: pointer;
    padding: $min-text-padding 0;

    & > label.c-checkbox {
      margin-right: 8px;
    }

    &:hover {
      background-color: $background-color-component-hover;
    }

    .c-tree.dragging & {
      cursor: move;

      & * {
        pointer-events: none;
      }
    }

    .c-tree.dragging.drop-not-allow & {
      cursor: not-allowed;
    }
  }

  @include e(expand-icon) {
    width: $component-size-small;
    height: $component-size-small;
    font-size: $font-size-mini;
    line-height: $component-size-small;
    text-align: center;
    transform: rotate(-90deg);
    transition: transform $transition-time ease-in-out;
    cursor: pointer;
    color: $text-color-placeholder;

    &.expanded {
      transform: rotate(0deg);
    }

    &.is-leaf {
      visibility: hidden;
    }
  }

  @include e(label) {
    font-size: $font-size;
  }

  @include e(loading-icon) {
    margin-right: $text-span;
    font-size: $font-size;
    color: $text-color-placeholder;
  }

  & > .c-tree-node-children {
    overflow: hidden;
    background-color: transparent;
  }

  &.expanded > .c-tree-node-children {
    display: block;
  }
}

