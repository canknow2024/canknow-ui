@mixin button-plain($type) {
  $button-color-types: (
          '': (
                  'text-color': (
                          'color',
                          $type,
                  ),
                  'background-color': (
                          'color',
                          $type,
                          'light-9',
                  ),
                  'border-color': (
                          'color',
                          $type,
                          'light-5',
                  ),
          ),
          'hover': (
                  'text-color': (
                          'color',
                          'white',
                  ),
                  'background-color': (
                          'color',
                          $type,
                  ),
                  'border-color': (
                          'color',
                          $type,
                  ),
          ),
          'active': (
                  'text-color': (
                          'color',
                          'white',
                  ),
          ),
  );

  @each $type, $typeMap in $button-color-types {
    @each $typeColor, $list in $typeMap {
      @include css-var-from-global(('button', $type, $typeColor), $list);
    }
  }

  &.is-disabled {
    &,
    &:hover,
    &:focus,
    &:active {
      color: getCssVar('color', $type, 'light-5');
      background-color: getCssVar('color', $type, 'light-9');
      border-color: getCssVar('color', $type, 'light-8');
    }
  }
}

@mixin button-ghost($type) {
  $button-color-types: (
          '': (
                  'text-color': (
                          'color',
                          $type,
                  ),
                  'background-color': (
                          'fill',
                          'color',
                          'transparent',
                  ),
                  'border-color': (
                          'border',
                          'color',
                          'transparent',
                  ),
          )
  );

  @each $type, $typeMap in $button-color-types {
    @each $typeColor, $list in $typeMap {
      @include css-var-from-global(('button', $type, $typeColor), $list);
    }
  }
}

@mixin button-bordered($type) {
  $button-color-types: (
          '': (
                  'text-color': (
                          'color',
                          $type,
                  ),
                  'background-color': (
                          'color',
                          'transparent',
                  ),
                  'border-color': (
                          'color',
                          $type,
                          'light-5',
                  ),
          ),
          'hover': (
                  'text-color': (
                          'color',
                          'white',
                  ),
                  'background-color': (
                          'color',
                          $type,
                  ),
                  'border-color': (
                          'color',
                          $type,
                  ),
          ),
          'active': (
                  'text-color': (
                          'color',
                          'white',
                  ),
          ),
  );

  @each $type, $typeMap in $button-color-types {
    @each $typeColor, $list in $typeMap {
      @include css-var-from-global(('button', $type, $typeColor), $list);
    }
  }
}

@mixin button-variant($type) {
  $button-color-types: (
          '': (
                  'text-color': (
                          'color',
                          'white',
                  ),
                  'background-color': (
                          'color',
                          $type,
                  ),
                  'border-color': (
                          'color',
                          $type,
                  ),
                  'outline-color': (
                          'color',
                          $type,
                          'light-5',
                  ),
                  'active-color': (
                          'color',
                          $type,
                          'dark-2',
                  ),
          ),
          'hover': (
                  'text-color': (
                          'color',
                          'white',
                  ),
                  'link-text-color': (
                          'color',
                          $type,
                          'light-5',
                  ),
                  'background-color': (
                          'color',
                          $type,
                          'light-3',
                  ),
                  'border-color': (
                          'color',
                          $type,
                          'light-3',
                  ),
          ),
          'active': (
                  'background-color': (
                          'color',
                          $type,
                          'dark-2',
                  ),
                  'border-color': (
                          'color',
                          $type,
                          'dark-2',
                  ),
          ),
          'disabled': (
                  'text-color': (
                          'color',
                          'white',
                  ),
                  'background-color': (
                          'color',
                          $type,
                          'light-5',
                  ),
                  'border-color': (
                          'color',
                          $type,
                          'light-5',
                  ),
          ),
  );

  @each $type, $typeMap in $button-color-types {
    @each $typeColor, $list in $typeMap {
      @include css-var-from-global(('button', $type, $typeColor), $list);
    }
  }

  &.plain {
    @include button-plain($type);
  }

  &.ghost {
    @include button-ghost($type);
  }

  &.bordered {
    @include button-bordered($type);
  }
}
